{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/julietgavison/Desktop/lazy-potatoes-front/src/components/ModalLogIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nexport default function ModalLogIn() {\n  _s();\n\n  const [modalLogIn, setModalLogIn] = useState(false);\n  const [password, setPassword] = useState();\n  const [email, setEmail] = useState();\n  const history = useHistory();\n\n  const openModalLogIn = () => setModalLogIn(true);\n\n  const handleClose = () => setModalLogIn(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await axios.post(\"http://localhost:5000/api/user/login\", {\n      email: email,\n      password: password\n    });\n    const logIn = await axios.post(\"http://localhost:5000/api/user/login\", {\n      email: email,\n      password: password\n    });\n\n    if (logIn.status === 200) {\n      localStorage.setItem('token', response.data);\n    }\n\n    setModalLogIn(false);\n    history.push('/');\n    const reload = window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"button btn btn-secondary my-2 my-sm-0 mx-3\",\n      type: \"button\",\n      onClick: openModalLogIn,\n      children: \" Log In \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: modalLogIn,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"light\",\n          onClick: handleClose,\n          type: \"button\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              required: true,\n              onChange: event => setEmail(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              required: true,\n              onChange: event => setPassword(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSubmit,\n            className: \"button w-100\",\n            type: \"submit\",\n            children: \"Log In \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ModalLogIn, \"AlgXHPf+IUF5dflP3aqqbFBhOAE=\", false, function () {\n  return [useHistory];\n});\n\n_c = ModalLogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalLogIn\");","map":{"version":3,"sources":["/Users/julietgavison/Desktop/lazy-potatoes-front/src/components/ModalLogIn.js"],"names":["React","useState","Modal","Button","Form","useHistory","axios","ModalLogIn","modalLogIn","setModalLogIn","password","setPassword","email","setEmail","history","openModalLogIn","handleClose","handleSubmit","event","preventDefault","response","post","logIn","status","localStorage","setItem","data","push","reload","window","location","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\n\n\nexport default function ModalLogIn() {\n    const [modalLogIn, setModalLogIn] = useState(false)\n    const [password, setPassword] = useState();\n    const [email, setEmail] = useState();\n    const history = useHistory();\n\n\n    const openModalLogIn = () =>\n        setModalLogIn(true);\n\n\n    const handleClose = () =>\n        setModalLogIn(false);\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const response = await axios.post(\"http://localhost:5000/api/user/login\", {\n            email: email,\n            password: password,\n        });\n\n        const logIn = await axios.post(\"http://localhost:5000/api/user/login\", {\n            email: email,\n            password: password\n        })\n        if (logIn.status === 200) {\n            localStorage.setItem('token', response.data);\n        }\n        setModalLogIn(false);\n        history.push('/')\n        const reload = window.location.reload()\n    }\n\n    return (\n        <>\n            <Button\n                className=\"button btn btn-secondary my-2 my-sm-0 mx-3\"\n\n                type=\"button\"\n                onClick={openModalLogIn}\n            > Log In </Button>\n\n            <Modal show={modalLogIn} onHide={handleClose}>\n\n                <Modal.Header>\n\n                    <Modal.Title>Log In</Modal.Title>\n                    <Button variant=\"light\" onClick={handleClose} type=\"button\">x</Button>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" value={email} required\n                                onChange={(event) => setEmail(event.target.value)} />\n\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" value={password} required\n                                onChange={(event) => setPassword(event.target.value)} />\n                        </Form.Group>\n                        <Button onClick={handleSubmit} className=\"button w-100\" type=\"submit\">\n                            Log In </Button>\n                    </Form>\n\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n\n}\n\n"]},"metadata":{},"sourceType":"module"}