{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/julietgavison/Desktop/lazy-potatoes-front/src/components/TripCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport TripCardModal from './TripCardModal';\nimport './tripCard.css';\nimport ListGroup from 'react-bootstrap/ListGroup';\nexport default function TripCard(props) {\n  _s();\n\n  const [modalShow, setModalShow] = React.useState(false);\n  const {\n    id,\n    area,\n    time,\n    store,\n    quantity,\n    name,\n    requests,\n    date\n  } = props.trip;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"m-3 tripCard\",\n    style: {\n      width: '18rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: [name, \"'s trip\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        children: [\"Area: \", area]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Store: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: store\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Time: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [time, \", \", date, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Able to carry: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setModalShow(true),\n        className: \"buttons\",\n        children: \"Make a Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), requests.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Current requests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: requests.map(request => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [request.requesterUser.firstname, \"'s request\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Items requested:\", request.reqItem1, \", \", request.reqItem2, \", \", request.reqItem3]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Dropoff Location: \", request.reqDropOff]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), request.accepted && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Request has been accepted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), !request.accepted && /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Accept this Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this)]\n          }, request.requestId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TripCardModal, {\n        trip: props.trip,\n        show: modalShow,\n        onHide: () => setModalShow(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TripCard, \"xuPPltV/3J92+XaNotdpXxySp+I=\");\n\n_c = TripCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TripCard\");","map":{"version":3,"sources":["/Users/julietgavison/Desktop/lazy-potatoes-front/src/components/TripCard.jsx"],"names":["React","Button","Card","TripCardModal","ListGroup","TripCard","props","modalShow","setModalShow","useState","id","area","time","store","quantity","name","requests","date","trip","width","length","map","request","requesterUser","firstname","reqItem1","reqItem2","reqItem3","reqDropOff","accepted","requestId"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Card } from 'react-bootstrap'\nimport TripCardModal from './TripCardModal'\nimport './tripCard.css'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nexport default function TripCard(props) {\n  const [modalShow, setModalShow] = React.useState(false)\n\n  const { id, area, time, store, quantity, name, requests, date } = props.trip\n\n  return (\n    <Card className='m-3 tripCard' style={{ width: '18rem' }} key={id}>\n      <Card.Body>\n        <Card.Title>{name}'s trip</Card.Title>\n        <Card.Subtitle className='mb-2 text-muted'>Area: {area}</Card.Subtitle>\n        <Card.Text>\n          Store: <b>{store}</b>\n        </Card.Text>\n        <Card.Text>\n          Time: <b>{time}, {date} </b> \n        </Card.Text>\n        <Card.Text>\n          Able to carry: <b>{quantity}</b>\n        </Card.Text>\n        <Button onClick={() => setModalShow(true)} className='buttons'>\n          Make a Request\n        </Button>\n\n        {requests.length > 0 && (\n          <div className='div'>\n            <Card.Header>Current requests</Card.Header>\n            <ListGroup variant='flush'>\n              {requests.map((request) => (\n                <ListGroup.Item key={request.requestId}>\n                  <h3>{request.requesterUser.firstname}'s request</h3>\n                  <p>\n                    Items requested:\n                    {request.reqItem1}, {request.reqItem2}, {request.reqItem3}\n                  </p>\n                  <p>Dropoff Location: {request.reqDropOff}</p>\n                  {request.accepted && \n                  <p> Request has been accepted</p>\n                  }\n                  {!request.accepted && \n                  <button>Accept this Request</button>\n                  }\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </div>\n        )}\n        <TripCardModal\n          trip={props.trip}\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n        />\n      </Card.Body>\n    </Card>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}