{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/julietgavison/Desktop/lazy-potatoes-front/src/components/ModalSignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nexport default function ModalSignUp() {\n  _s();\n\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [modalSignUp, setModalSignUp] = useState(false);\n  const history = useHistory();\n\n  const openModalSignUp = () => setModalSignUp(true);\n\n  const handleClose = () => setModalSignUp(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await axios.post('http://localhost:5000/api/users/register', {\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword,\n      firstName: firstName,\n      lastName: lastName,\n      phoneNumber: phoneNumber,\n      points: 20\n    });\n    console.log(response);\n    setModalSignUp(false);\n    const logIn = await axios.post('http://localhost:5000/api/users/login', {\n      email: email,\n      password: password\n    });\n\n    if (logIn.status === 200) {\n      localStorage.setItem('token', response.data);\n    }\n\n    history.push('/'); // const reload = window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"buttons-login-signup button btn btn-secondary my-2 my-sm-0 mr-4\",\n      type: \"button\",\n      onClick: openModalSignUp,\n      children: [\"Sign Up\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: modalSignUp,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"light\",\n          onClick: handleClose,\n          type: \"button\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              required: true,\n              onChange: event => setEmail(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              required: true,\n              onChange: event => setPassword(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"confirmPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: confirmPassword,\n              required: true,\n              onChange: event => setConfirmPassword(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"firsName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: firstName,\n              required: true,\n              onChange: event => setFirstName(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"lastName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: lastName,\n              required: true,\n              onChange: event => setLastName(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"phoneNumber\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: phoneNumber,\n              required: true,\n              onChange: event => setPhoneNumber(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSubmit,\n            className: \"button w-100\",\n            type: \"submit\",\n            children: [\"Log In\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ModalSignUp, \"uU6b36ae5lihG5AaseWyuEt15N0=\", false, function () {\n  return [useHistory];\n});\n\n_c = ModalSignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalSignUp\");","map":{"version":3,"sources":["/Users/julietgavison/Desktop/lazy-potatoes-front/src/components/ModalSignUp.jsx"],"names":["React","useState","Modal","Button","Form","useHistory","axios","ModalSignUp","phoneNumber","setPhoneNumber","firstName","setFirstName","lastName","setLastName","password","setPassword","confirmPassword","setConfirmPassword","email","setEmail","modalSignUp","setModalSignUp","history","openModalSignUp","handleClose","handleSubmit","event","preventDefault","response","post","points","console","log","logIn","status","localStorage","setItem","data","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function ModalSignUp() {\n\tconst [phoneNumber, setPhoneNumber] = useState('');\n\tconst [firstName, setFirstName] = useState('');\n\tconst [lastName, setLastName] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [confirmPassword, setConfirmPassword] = useState('');\n\tconst [email, setEmail] = useState('');\n\tconst [modalSignUp, setModalSignUp] = useState(false);\n\tconst history = useHistory();\n\n\tconst openModalSignUp = () => setModalSignUp(true);\n\n\tconst handleClose = () => setModalSignUp(false);\n\n\tconst handleSubmit = async event => {\n\t\tevent.preventDefault();\n\t\tconst response = await axios.post(\n\t\t\t'http://localhost:5000/api/users/register',\n\t\t\t{\n\t\t\t\temail: email,\n\t\t\t\tpassword: password,\n\t\t\t\tconfirmPassword: confirmPassword,\n\t\t\t\tfirstName: firstName,\n\t\t\t\tlastName: lastName,\n\t\t\t\tphoneNumber: phoneNumber,\n\t\t\t\tpoints: 20,\n\t\t\t}\n\t\t);\n\t\tconsole.log(response);\n\t\tsetModalSignUp(false);\n\t\tconst logIn = await axios.post('http://localhost:5000/api/users/login', {\n\t\t\temail: email,\n\t\t\tpassword: password,\n\t\t});\n\t\tif (logIn.status === 200) {\n\t\t\tlocalStorage.setItem('token', response.data);\n\t\t}\n\n\t\thistory.push('/');\n\t\t// const reload = window.location.reload();\n\t};\n\n\treturn (\n    <>\n      <Button\n        className=\"buttons-login-signup button btn btn-secondary my-2 my-sm-0 mr-4\"\n        type=\"button\"\n        onClick={openModalSignUp}\n      >\n        Sign Up{\" \"}\n      </Button>\n\n      <Modal show={modalSignUp} onHide={handleClose}>\n        <Modal.Header>\n          <Modal.Title>Sign Up</Modal.Title>\n          <Button variant=\"light\" onClick={handleClose} type=\"button\">\n            x\n          </Button>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                value={email}\n                required\n                onChange={(event) => setEmail(event.target.value)}\n              />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={password}\n                required\n                onChange={(event) => setPassword(event.target.value)}\n              />\n            </Form.Group>\n            <Form.Group id=\"confirmPassword\">\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={confirmPassword}\n                required\n                onChange={(event) => setConfirmPassword(event.target.value)}\n              />\n            </Form.Group>\n            <Form.Group id=\"firsName\">\n              <Form.Label>First Name</Form.Label>\n              <Form.Control\n                type=\"email\"\n                value={firstName}\n                required\n                onChange={(event) => setFirstName(event.target.value)}\n              />\n            </Form.Group>\n            <Form.Group id=\"lastName\">\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control\n                type=\"email\"\n                value={lastName}\n                required\n                onChange={(event) => setLastName(event.target.value)}\n              />\n            </Form.Group>\n            <Form.Group id=\"phoneNumber\">\n              <Form.Label>Phone Number</Form.Label>\n              <Form.Control\n                type=\"email\"\n                value={phoneNumber}\n                required\n                onChange={(event) => setPhoneNumber(event.target.value)}\n              />\n            </Form.Group>\n            <Button\n              onClick={handleSubmit}\n              className=\"button w-100\"\n              type=\"submit\"\n            >\n              Log In{\" \"}\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}