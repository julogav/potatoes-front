{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/julietgavison/Desktop/lazy-potatoes-front/src/components/ModalLogIn.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useContext } from \"react\";\nimport { UserContext } from \"../contexts/UserContext\";\nexport default function ModalLogIn() {\n  _s();\n\n  const {\n    setCurrentUser\n  } = useContext(UserContext);\n  const [modalLogIn, setModalLogIn] = useState(false);\n  const [password, setPassword] = useState();\n  const [email, setEmail] = useState();\n  const history = useHistory();\n\n  const openModalLogIn = () => setModalLogIn(true);\n\n  const handleClose = () => setModalLogIn(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await axios.post(\"http://localhost:5000/api/users/login\", {\n      email: email,\n      password: password\n    });\n    const logIn = await axios.post(\"http://localhost:5000/api/users/login\", {\n      email: email,\n      password: password\n    });\n\n    if (logIn.status === 200) {\n      localStorage.setItem('token', response.data);\n    }\n\n    console.log('login', logIn);\n    setModalLogIn(false);\n    history.push('/');\n    setCurrentUser(logIn.data);\n    localStorage.setItem('user', JSON.stringify(logIn.data)); // const reload = window.location.reload()\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"buttons-login-signup button btn btn-secondary my-2 my-sm-0 mx-3\",\n      type: \"button\",\n      onClick: openModalLogIn,\n      children: [\" \", \"Log In\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: modalLogIn,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"light\",\n          onClick: handleClose,\n          type: \"button\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              required: true,\n              onChange: event => setEmail(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              required: true,\n              onChange: event => setPassword(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSubmit,\n            className: \"button w-100\",\n            type: \"submit\",\n            children: [\"Log In\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ModalLogIn, \"KWC0XsKz9ySEe+//g/v1Bg5DgU4=\", false, function () {\n  return [useHistory];\n});\n\n_c = ModalLogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalLogIn\");","map":{"version":3,"sources":["/Users/julietgavison/Desktop/lazy-potatoes-front/src/components/ModalLogIn.jsx"],"names":["React","useState","Modal","Button","Form","useHistory","axios","useContext","UserContext","ModalLogIn","setCurrentUser","modalLogIn","setModalLogIn","password","setPassword","email","setEmail","history","openModalLogIn","handleClose","handleSubmit","event","preventDefault","response","post","logIn","status","localStorage","setItem","data","console","log","push","JSON","stringify","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport { useContext } from \"react\";\nimport { UserContext } from \"../contexts/UserContext\";\n\n\nexport default function ModalLogIn() {\n\n    const { setCurrentUser } = useContext(UserContext);\n\n    const [modalLogIn, setModalLogIn] = useState(false)\n    const [password, setPassword] = useState();\n    const [email, setEmail] = useState();\n    const history = useHistory();\n\n\n    const openModalLogIn = () =>\n        setModalLogIn(true);\n\n\n    const handleClose = () =>\n        setModalLogIn(false);\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const response = await axios.post(\"http://localhost:5000/api/users/login\", {\n            email: email,\n            password: password,\n        });\n\n        const logIn = await axios.post(\"http://localhost:5000/api/users/login\", {\n            email: email,\n            password: password\n        })\n        if (logIn.status === 200) {\n            localStorage.setItem('token', response.data);\n        }\n        console.log('login', logIn);\n        setModalLogIn(false);\n        history.push('/');\n\n        setCurrentUser(logIn.data);\n        localStorage.setItem('user', JSON.stringify(logIn.data));\n        // const reload = window.location.reload()\n    }\n\n    return (\n      <>\n        <Button\n          className=\"buttons-login-signup button btn btn-secondary my-2 my-sm-0 mx-3\"\n          type=\"button\"\n          onClick={openModalLogIn}\n        >\n          {\" \"}\n          Log In{\" \"}\n        </Button>\n\n        <Modal show={modalLogIn} onHide={handleClose}>\n          <Modal.Header>\n            <Modal.Title>Log In</Modal.Title>\n            <Button variant=\"light\" onClick={handleClose} type=\"button\">\n              x\n            </Button>\n          </Modal.Header>\n          <Modal.Body>\n            <Form onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  value={email}\n                  required\n                  onChange={(event) => setEmail(event.target.value)}\n                />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  value={password}\n                  required\n                  onChange={(event) => setPassword(event.target.value)}\n                />\n              </Form.Group>\n              <Button\n                onClick={handleSubmit}\n                className=\"button w-100\"\n                type=\"submit\"\n              >\n                Log In{\" \"}\n              </Button>\n            </Form>\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n\n}\n\n"]},"metadata":{},"sourceType":"module"}