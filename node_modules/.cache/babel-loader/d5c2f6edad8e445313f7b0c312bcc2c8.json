{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/julietgavison/Desktop/lazy-potatoes-front/src/components/AllTrips.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Row, Form, Button } from \"react-bootstrap\";\nimport TripCard from \"./TripCard\";\nimport React from \"react\";\nimport { areas } from \"./add-trip\";\nimport { baseURL } from \"../App\";\nexport default function AllTrips() {\n  _s();\n\n  const [allTrips, setAllTrips] = useState([]);\n  const [areaTrips, setAreaTrips] = useState([]);\n  const [searchArea, setSearchArea] = useState();\n  useEffect(() => {\n    const showAllTrips = async () => {\n      const res = await axios.get(`${baseURL}/api/alltrips`);\n      setAllTrips(res.data);\n    };\n\n    showAllTrips();\n  }, []);\n\n  const handleSearch = async event => {\n    event.preventDefault();\n    const newSearch = {\n      searchArea: searchArea\n    };\n    const res = await axios.get(`http://localhost:5000/api/trips/search?area=${searchArea}`);\n    setAreaTrips(res.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"Type\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"mt-1\",\n          children: \"Area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          defaultValue: \"Glilot\",\n          value: searchArea,\n          required: true //   name=\"type\"\n          ,\n          onChange: e => setSearchArea(e.target.value),\n          children: [areas.map(area => /*#__PURE__*/_jsxDEV(\"option\", {\n            area: {\n              area\n            },\n            children: area\n          }, area.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSearch // className=\"button w-100\"\n            ,\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mb-5 \",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All Trips\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), allTrips && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"m-3\",\n        children: allTrips.map(trip => /*#__PURE__*/_jsxDEV(TripCard, {\n          trip: trip\n        }, trip.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AllTrips, \"BRfkwmiX8HJU8hh3FFylKOUWY28=\");\n\n_c = AllTrips;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllTrips\");","map":{"version":3,"sources":["/Users/julietgavison/Desktop/lazy-potatoes-front/src/components/AllTrips.jsx"],"names":["useEffect","useState","axios","Row","Form","Button","TripCard","React","areas","baseURL","AllTrips","allTrips","setAllTrips","areaTrips","setAreaTrips","searchArea","setSearchArea","showAllTrips","res","get","data","handleSearch","event","preventDefault","newSearch","e","target","value","map","area","id","trip"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Row, Form, Button } from \"react-bootstrap\";\nimport TripCard from \"./TripCard\";\nimport React from \"react\";\nimport { areas } from \"./add-trip\"\nimport { baseURL } from \"../App\";\n\n\nexport default function AllTrips() {\n  const [allTrips, setAllTrips] = useState([]);\n  const [areaTrips, setAreaTrips] = useState([])\n    const [searchArea, setSearchArea] = useState();\n\n\n  useEffect(() => {\n    const showAllTrips = async () => {\n      const res = await axios.get(`${baseURL}/api/alltrips`);\n      setAllTrips(res.data);\n    };\n    showAllTrips();\n  }, []);\n\n      const handleSearch = async (event) => {\n        event.preventDefault();\n        const newSearch = {\n          searchArea: searchArea,\n        };\n        const res = await axios.get(\n          `http://localhost:5000/api/trips/search?area=${searchArea}`\n        );\n        setAreaTrips(res.data);\n      };\n\n\n  return (\n    <>\n      <Form>\n        <Form.Group controlId=\"Type\">\n          <Form.Label className=\"mt-1\">Area</Form.Label>\n          <Form.Control\n            as=\"select\"\n            defaultValue=\"Glilot\"\n            value={searchArea}\n            required\n            //   name=\"type\"\n            onChange={(e) => setSearchArea(e.target.value)}\n          >\n            {areas.map((area) => (\n              <option key={area.id} area={{ area }}>\n                {area}\n              </option>\n            ))}\n            <Button\n              onClick={handleSearch}\n              // className=\"button w-100\"\n              type=\"submit\"\n            ></Button>\n          </Form.Control>\n        </Form.Group>\n      </Form>\n      <div className=\"container mb-5 \">\n        <h1>All Trips</h1>\n        {allTrips && (\n          <Row className=\"m-3\">\n            {allTrips.map((trip) => (\n              <TripCard key={trip.id} trip={trip} />\n            ))}\n          </Row>\n        )}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}