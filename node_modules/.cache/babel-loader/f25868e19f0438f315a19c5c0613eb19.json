{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/julietgavison/Desktop/lazy-potatoes-front/src/components/ModalLogIn.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nexport default function ModalLogIn() {\n  _s();\n\n  const [modalLogIn, setModalLogIn] = useState(false);\n  const [password, setPassword] = useState();\n  const [email, setEmail] = useState();\n  const history = useHistory();\n\n  const openModalLogIn = () => setModalLogIn(true);\n\n  const handleClose = () => setModalLogIn(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await axios.post('http://localhost:5000/api/users/login', {\n      email: email,\n      password: password\n    });\n    const logIn = await axios.post('http://localhost:5000/api/users/login', {\n      email: email,\n      password: password\n    });\n\n    if (logIn.status === 200) {\n      localStorage.setItem('token', response.data);\n    }\n\n    setModalLogIn(false);\n    console.log('login', logIn);\n    history.push('/'); // const reload = window.location.reload()\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"button btn btn-secondary my-2 my-sm-0 mx-3\",\n      type: \"button\",\n      onClick: openModalLogIn,\n      children: [' ', \"Log In\", ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: modalLogIn,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"light\",\n          onClick: handleClose,\n          type: \"button\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              required: true,\n              onChange: event => setEmail(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              required: true,\n              onChange: event => setPassword(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSubmit,\n            className: \"button w-100\",\n            type: \"submit\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ModalLogIn, \"AlgXHPf+IUF5dflP3aqqbFBhOAE=\", false, function () {\n  return [useHistory];\n});\n\n_c = ModalLogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalLogIn\");","map":{"version":3,"sources":["/Users/julietgavison/Desktop/lazy-potatoes-front/src/components/ModalLogIn.jsx"],"names":["React","useState","Modal","Button","Form","useHistory","axios","ModalLogIn","modalLogIn","setModalLogIn","password","setPassword","email","setEmail","history","openModalLogIn","handleClose","handleSubmit","event","preventDefault","response","post","logIn","status","localStorage","setItem","data","console","log","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function ModalLogIn() {\n\tconst [modalLogIn, setModalLogIn] = useState(false);\n\tconst [password, setPassword] = useState();\n\tconst [email, setEmail] = useState();\n\tconst history = useHistory();\n\n\tconst openModalLogIn = () => setModalLogIn(true);\n\n\tconst handleClose = () => setModalLogIn(false);\n\n\tconst handleSubmit = async event => {\n\t\tevent.preventDefault();\n\t\tconst response = await axios.post('http://localhost:5000/api/users/login', {\n\t\t\temail: email,\n\t\t\tpassword: password,\n\t\t});\n\n\t\tconst logIn = await axios.post('http://localhost:5000/api/users/login', {\n\t\t\temail: email,\n\t\t\tpassword: password,\n\t\t});\n\t\tif (logIn.status === 200) {\n\t\t\tlocalStorage.setItem('token', response.data);\n\t\t}\n\t\tsetModalLogIn(false);\n\t\tconsole.log('login', logIn);\n\t\thistory.push('/');\n\t\t// const reload = window.location.reload()\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\tclassName='button btn btn-secondary my-2 my-sm-0 mx-3'\n\t\t\t\ttype='button'\n\t\t\t\tonClick={openModalLogIn}>\n\t\t\t\t{' '}\n\t\t\t\tLog In{' '}\n\t\t\t</Button>\n\n\t\t\t<Modal show={modalLogIn} onHide={handleClose}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>Log In</Modal.Title>\n\t\t\t\t\t<Button variant='light' onClick={handleClose} type='button'>\n\t\t\t\t\t\tx\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<Form.Group id='email'>\n\t\t\t\t\t\t\t<Form.Label>Email</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tonChange={event => setEmail(event.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group id='password'>\n\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tonChange={event => setPassword(event.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t\t\tclassName='button w-100'\n\t\t\t\t\t\t\ttype='submit'>\n\t\t\t\t\t\t\tLog In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal.Body>\n\t\t\t</Modal>\n\t\t</>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}