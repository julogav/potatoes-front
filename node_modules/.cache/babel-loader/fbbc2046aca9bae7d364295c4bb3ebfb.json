{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/julietgavison/Desktop/lazy-potatoes-front/src/components/TripCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport TripCardModal from './TripCardModal';\nimport './tripCard.css';\nimport ListGroup from 'react-bootstrap/ListGroup';\nexport default function TripCard(props) {\n  _s();\n\n  const [modalShow, setModalShow] = React.useState(false);\n  const {\n    id,\n    area,\n    time,\n    store,\n    quantity,\n    name,\n    requests,\n    date\n  } = props.trip;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"m-3 tripCard\",\n    style: {\n      width: '18rem'\n    },\n    onClick: () => setModalShow(true),\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: [name, \"'s trip\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n        className: \"mb-2 text-muted\",\n        children: [\"Area: \", area]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Store: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: store\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Time:\", ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [time, \", \", date, ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Able to carry: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"buttons\",\n        children: \"Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), requests.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Current requests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: requests.map(request => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [request.requesterUser.firstname, \"'s request\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Items requested:\", request.reqItem1, \", \", request.reqItem2, \", \", request.reqItem3]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Dropoff Location: \", request.reqDropOff]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 10\n            }, this), request.accepted && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Request has been accepted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 31\n            }, this), !request.accepted && /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Accept this Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 32\n            }, this)]\n          }, request.requestId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(TripCardModal, {\n        trip: props.trip,\n        show: modalShow,\n        onHide: () => setModalShow(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n}\n\n_s(TripCard, \"xuPPltV/3J92+XaNotdpXxySp+I=\");\n\n_c = TripCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TripCard\");","map":{"version":3,"sources":["/Users/julietgavison/Desktop/lazy-potatoes-front/src/components/TripCard.jsx"],"names":["React","Button","Card","TripCardModal","ListGroup","TripCard","props","modalShow","setModalShow","useState","id","area","time","store","quantity","name","requests","date","trip","width","length","map","request","requesterUser","firstname","reqItem1","reqItem2","reqItem3","reqDropOff","accepted","requestId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport TripCardModal from './TripCardModal';\nimport './tripCard.css';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nexport default function TripCard(props) {\n\tconst [modalShow, setModalShow] = React.useState(false);\n\n\tconst { id, area, time, store, quantity, name, requests, date } = props.trip;\n\n\treturn (\n\t\t<Card\n\t\t\tclassName='m-3 tripCard'\n\t\t\tstyle={{ width: '18rem' }}\n\t\t\tkey={id}\n\t\t\tonClick={() => setModalShow(true)}>\n\t\t\t<Card.Body>\n\t\t\t\t<Card.Title>{name}'s trip</Card.Title>\n\t\t\t\t<Card.Subtitle className='mb-2 text-muted'>Area: {area}</Card.Subtitle>\n\t\t\t\t<Card.Text>\n\t\t\t\t\tStore: <b>{store}</b>\n\t\t\t\t</Card.Text>\n\t\t\t\t<Card.Text>\n\t\t\t\t\tTime:{' '}\n\t\t\t\t\t<b>\n\t\t\t\t\t\t{time}, {date}{' '}\n\t\t\t\t\t</b>\n\t\t\t\t</Card.Text>\n\t\t\t\t<Card.Text>\n\t\t\t\t\tAble to carry: <b>{quantity}</b>\n\t\t\t\t</Card.Text>\n\t\t\t\t<Button className='buttons'>Request</Button>\n\n\t\t\t\t{requests.length > 0 && (\n\t\t\t\t\t<div className='div'>\n\t\t\t\t\t\t<Card.Header>Current requests</Card.Header>\n\t\t\t\t\t\t<ListGroup variant='flush'>\n\t\t\t\t\t\t\t{requests.map(request => (\n\t\t\t\t\t\t\t\t<ListGroup.Item key={request.requestId}>\n\t\t\t\t\t\t\t\t\t<h3>{request.requesterUser.firstname}'s request</h3>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tItems requested:\n\t\t\t\t\t\t\t\t\t\t{request.reqItem1}, {request.reqItem2}, {request.reqItem3}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>Dropoff Location: {request.reqDropOff}</p>\n\t\t\t\t\t\t\t\t\t{request.accepted && <p> Request has been accepted</p>}\n\t\t\t\t\t\t\t\t\t{!request.accepted && <button>Accept this Request</button>}\n\t\t\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<TripCardModal\n\t\t\t\t\ttrip={props.trip}\n\t\t\t\t\tshow={modalShow}\n\t\t\t\t\tonHide={() => setModalShow(false)}\n\t\t\t\t/>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}